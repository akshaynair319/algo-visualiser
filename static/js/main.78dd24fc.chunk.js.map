{"version":3,"sources":["Data/Algorithms.js","utils/actions.js","utils/bfs.js","utils/dfs.js","utils/dijktras.js","utils/initialState.js","utils/reducer.js","Components/Context.js","Components/Dropdown.js","Components/Customize.js","Components/Navbar.js","Components/Edge.js","Components/DrawEdges.js","Components/Grid.js","Components/App.js","index.js"],"names":["algorithms","ACTIONS","bfs","startNode","vertices","adjList","queue","newVertices","JSON","parse","stringify","iteration","length","len","j","index","shift","i","push","dfs","stack","pop","dijktras","nodesDist","pq","newNodesDist","dist","vertex","filter","node","getInitialState","nodes","Array","number_of_nodes","join","split","map","parseFloat","currentVertex","verticesAdded","edgesAdded","edge","x1","x2","y1","y2","node1","node2","edges","currentAlgo","size","reducer","state","action","type","weight","CurrentVertex","item","payload","console","log","idx","edgeWeight","Math","floor","random","width","height","Error","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","refresh","Provider","value","clearAll","makeNode","updatePoints","changeAlgo","algo","startVisualisation","useGlobalContext","useContext","Dropdown","rect","show","style","top","y","left","x","className","onClick","Customize","useState","customize","setCustomize","Navbar","localStorage","getItem","theme","setTheme","dropdown","setDropdown","selectAlgoRef","useRef","useEffect","document","documentElement","newTheme","setItem","current","getBoundingClientRect","ref","Edge","angle","atan","PI","sqrt","midX","midY","transform","DrawEdges","Grid","activeNode","myNode","transition","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.78dd24fc.chunk.js","sourcesContent":["export const algorithms = [\r\n  \"bfs\",\r\n  \"dfs\",\r\n  \"dijktras\",\r\n  \"mst\",\r\n  \"cut-edge\",\r\n  \"cut-edge\",\r\n];\r\n","export const ACTIONS = {\r\n  DELETE: \"DELETE\",\r\n  REFRESH: \"REFRESH\",\r\n  MAKENODE: \"MAKENODE\",\r\n  MAKEEDGE: \"MAKEEDGE\",\r\n  CHANGEALGO: \"CHANGEALGO\",\r\n  VISUALISE: \"VISUALISE\",\r\n};\r\n","export const bfs = (startNode, vertices, adjList) => {\r\n  let queue = [startNode];\r\n  let newVertices = JSON.parse(JSON.stringify(vertices));\r\n\r\n  let iteration = 2;\r\n  while (queue.length !== 0) {\r\n    const len = queue.length;\r\n    let j = 0;\r\n    while (j < len) {\r\n      const index = queue[0];\r\n      queue.shift();\r\n      if (newVertices[index] > 1) {\r\n        j++;\r\n        continue;\r\n      }\r\n      newVertices[index] = iteration;\r\n\r\n      for (let i = 0; i < adjList.length; i++) {\r\n        if (adjList[i][0] === index && newVertices[adjList[i][1]] === 1) {\r\n          queue.push(adjList[i][1]);\r\n        }\r\n        if (adjList[i][1] === index && newVertices[adjList[i][0]] === 1) {\r\n          queue.push(adjList[i][0]);\r\n        }\r\n      }\r\n      j++;\r\n    }\r\n    iteration++;\r\n  }\r\n\r\n  return newVertices;\r\n};\r\n","export const dfs = (startNode, vertices, adjList) => {\r\n  let stack = [startNode];\r\n  let newVertices = JSON.parse(JSON.stringify(vertices));\r\n\r\n  let iteration = 2;\r\n  while (stack.length !== 0) {\r\n    const index = stack[stack.length - 1];\r\n    stack.pop();\r\n    if (newVertices[index] > 1) {\r\n      continue;\r\n    }\r\n    newVertices[index] = iteration;\r\n\r\n    for (let i = 0; i < adjList.length; i++) {\r\n      if (adjList[i][0] === index && newVertices[adjList[i][1]] === 1) {\r\n        stack.push(adjList[i][1]);\r\n      }\r\n      if (adjList[i][1] === index && newVertices[adjList[i][0]] === 1) {\r\n        stack.push(adjList[i][0]);\r\n      }\r\n    }\r\n    iteration++;\r\n  }\r\n\r\n  return newVertices;\r\n};\r\n","export const dijktras = (startNode, nodesDist, adjList) => {\r\n  let pq = [[startNode, 0]];\r\n  let newNodesDist = JSON.parse(JSON.stringify(nodesDist));\r\n  newNodesDist[startNode] = 0;\r\n\r\n  while (pq.length !== 0) {\r\n    //go through the queue and find the element with the lowest dist from startNode\r\n    let dist = pq[0][1];\r\n    let index = 0;\r\n    for (let i = 1; i < pq.length; i++) {\r\n      if (pq[i][1] < dist) {\r\n        dist = pq[i][1];\r\n        index = i;\r\n      }\r\n    }\r\n    const vertex = pq[index][0];\r\n    pq = pq.filter((node) => node[0] !== vertex);\r\n\r\n    if (newNodesDist[vertex] < dist) continue; //check if there is already a better version of the element in queue\r\n    for (let i = 0; i < adjList.length; i++) {\r\n      if (\r\n        adjList[i][0] === vertex &&\r\n        newNodesDist[vertex] + adjList[i][2] < newNodesDist[adjList[i][1]]\r\n      ) {\r\n        newNodesDist[adjList[i][1]] = newNodesDist[vertex] + adjList[i][2];\r\n        pq.push([adjList[i][1], newNodesDist[vertex] + adjList[i][2]]);\r\n      }\r\n      if (\r\n        adjList[i][1] === vertex &&\r\n        newNodesDist[vertex] + adjList[i][2] < newNodesDist[adjList[i][0]]\r\n      ) {\r\n        newNodesDist[adjList[i][0]] = newNodesDist[vertex] + adjList[i][2];\r\n        pq.push([adjList[i][0], newNodesDist[vertex] + adjList[i][2]]);\r\n      }\r\n    }\r\n  }\r\n  return newNodesDist;\r\n};\r\n","export const getInitialState = () => {\r\n  const cols = 40;\r\n  const rows = 17;\r\n  const number_of_nodes = rows * cols;\r\n  let nodes = new Array(number_of_nodes + 1)\r\n    .join(\"0\")\r\n    .split(\"\")\r\n    .map(parseFloat);\r\n\r\n  return {\r\n    vertices: nodes,\r\n    currentVertex: null,\r\n    verticesAdded: 0,\r\n    edgesAdded: 0,\r\n    edge: {\r\n      //properties of the latest edge: from{x1,y1, node1} to{x2,y2,node2}\r\n      x1: -1,\r\n      x2: -1,\r\n      y1: -1,\r\n      y2: -1,\r\n      node1: -1,\r\n      node2: -1,\r\n    },\r\n    edges: [],\r\n    adjList: [],\r\n    currentAlgo: \"\",\r\n    startNode: -1,\r\n    nodesDist: nodes.map((nodes) => 10000),\r\n    size: 32,\r\n  };\r\n};\r\n","import { ACTIONS } from \"./actions\";\r\nimport { bfs } from \"./bfs\";\r\nimport { dfs } from \"./dfs\";\r\nimport { dijktras } from \"./dijktras\";\r\nimport { getInitialState } from \"./initialState\";\r\nexport const reducer = (state, action) => {\r\n  if (action.type === ACTIONS.DELETE) {\r\n    return getInitialState();\r\n  }\r\n  if (action.type === ACTIONS.REFRESH) {\r\n    return {\r\n      ...state,\r\n      edge: {\r\n        x1: -1,\r\n        x2: -1,\r\n        y1: -1,\r\n        y2: -1,\r\n        node1: -1,\r\n        node2: -1,\r\n        weight: -1,\r\n      },\r\n      CurrentVertex: null,\r\n      currentAlgo: \"\",\r\n      vertices: state.vertices.map((item) => {\r\n        if (item >= 1) return 1;\r\n        return 0;\r\n      }),\r\n      nodesDist: state.vertices.map((node) => 10000),\r\n    };\r\n  }\r\n  if (action.type === ACTIONS.MAKENODE) {\r\n    const index = action.payload;\r\n    console.log(index);\r\n    //if an algorithm is running ignore clicks\r\n    if (state.currentAlgo !== \"\") {\r\n      return state;\r\n    }\r\n    //check if user clicked on a vertex twice\r\n    if (index === state.edge.node1) {\r\n      //deactivate edge making process\r\n      return {\r\n        ...state,\r\n        currentVertex: null,\r\n        edge: { x1: -1, x2: -1, y1: -1, y2: -1, node1: -1, node2: -1 },\r\n      };\r\n    }\r\n    //set this node as the current node\r\n\r\n    //if this node was already an vertex\r\n    if (state.vertices[index] === 1) {\r\n      return { ...state, currentVertex: index };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      currentVertex: null,\r\n      verticesAdded: state.verticesAdded + 1,\r\n      startNode: index,\r\n      edge: {\r\n        x1: -1,\r\n        x2: -1,\r\n        y1: -1,\r\n        y2: -1,\r\n        node1: -1,\r\n        node2: -1,\r\n        weight: -1,\r\n      },\r\n      vertices: state.vertices.map((vertex, idx) => {\r\n        if (index === idx) {\r\n          return 1;\r\n        }\r\n        return vertex;\r\n      }),\r\n    };\r\n  }\r\n  if (action.type === ACTIONS.MAKEEDGE) {\r\n    //ignore if currently doing graph traversal\r\n    if (state.currentAlgo !== \"\") return state;\r\n    console.log(action.payload);\r\n    //maybe this vertex is part of an edge\r\n    if (state.edge.x1 !== -1) {\r\n      //found an edge\r\n      const edgeWeight = Math.floor(Math.random() * 10 + 1);\r\n      return {\r\n        ...state,\r\n        adjList: [\r\n          ...state.adjList,\r\n          [state.edge.node1, state.currentVertex, edgeWeight],\r\n        ],\r\n        edges: [\r\n          ...state.edges,\r\n          {\r\n            ...state.edge,\r\n            x2: action.payload.width,\r\n            y2: action.payload.height,\r\n            node2: state.currentVertex,\r\n            weight: edgeWeight,\r\n          },\r\n        ],\r\n        edge: {\r\n          x1: -1,\r\n          x2: -1,\r\n          y1: -1,\r\n          y2: -1,\r\n          node1: -1,\r\n          node2: -1,\r\n          weight: -1,\r\n        },\r\n        edgesAdded: state.edgesAdded + 1,\r\n        currentVertex: null,\r\n      };\r\n    } else {\r\n      //maybe this is the first node of an edge\r\n      return {\r\n        ...state,\r\n        edge: {\r\n          ...state.edge,\r\n          x1: action.payload.width,\r\n          y1: action.payload.height,\r\n          node1: state.currentVertex,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  if (action.type === ACTIONS.CHANGEALGO) {\r\n    return { ...state, currentAlgo: action.payload };\r\n  }\r\n  if (action.type === ACTIONS.VISUALISE) {\r\n    if (action.payload === \"bfs\") {\r\n      return {\r\n        ...state,\r\n        vertices: bfs(state.startNode, state.vertices, state.adjList),\r\n      };\r\n    }\r\n    if (action.payload === \"dfs\") {\r\n      return {\r\n        ...state,\r\n        vertices: dfs(state.startNode, state.vertices, state.adjList),\r\n      };\r\n    }\r\n    if (action.payload === \"dijktras\") {\r\n      return {\r\n        ...state,\r\n        nodesDist: dijktras(state.startNode, state.nodesDist, state.adjList),\r\n      };\r\n    }\r\n  }\r\n\r\n  throw new Error(\"invlaid call\");\r\n};\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { reducer } from \"../utils/reducer\";\r\nimport { ACTIONS } from \"../utils/actions\";\r\nimport { getInitialState } from \"../utils/initialState\";\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = getInitialState();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //function for clearing the board\r\n  const clearAll = () => {\r\n    dispatch({ type: ACTIONS.DELETE });\r\n  };\r\n\r\n  //function for clearing the progress of the algorithm\r\n  const refresh = () => {\r\n    dispatch({ type: ACTIONS.REFRESH });\r\n  };\r\n\r\n  const updatePoints = (width, height) => {\r\n    dispatch({ type: ACTIONS.MAKEEDGE, payload: { width, height } });\r\n  };\r\n\r\n  //handles the event when we click on a cell\r\n  const makeNode = (index) => {\r\n    dispatch({ type: ACTIONS.MAKENODE, payload: index });\r\n  };\r\n\r\n  //changes algorithm\r\n  const changeAlgo = (algo) => {\r\n    refresh();\r\n    dispatch({ type: ACTIONS.CHANGEALGO, payload: algo });\r\n  };\r\n\r\n  const startVisualisation = () => {\r\n    if (state.currentAlgo === \"\") return;\r\n    if (state.currentAlgo === \"bfs\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"bfs\" });\r\n    if (state.currentAlgo === \"dfs\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"dfs\" });\r\n    if (state.currentAlgo === \"dijktras\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"dijktras\" });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        clearAll,\r\n        makeNode,\r\n        updatePoints,\r\n        changeAlgo,\r\n        refresh,\r\n        startVisualisation,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(AppContext);\r\n","import React from \"react\";\r\nimport { algorithms } from \"../Data/Algorithms\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/dropdown.css\";\r\nfunction Dropdown({ rect, show }) {\r\n  const { currentAlgo, changeAlgo } = useGlobalContext();\r\n  console.log(rect);\r\n  const style = {\r\n    top: `${rect.y + rect.height}px`,\r\n    left: `${rect.x}px`,\r\n    width: `${rect.width}px`,\r\n  };\r\n  return (\r\n    <div className={`dropdown ${show ? \"dropdown-show\" : \"\"}`} style={style}>\r\n      {algorithms.map((algo, index) => {\r\n        return (\r\n          <li\r\n            className={`${\r\n              currentAlgo !== \"\"\r\n                ? algo === currentAlgo\r\n                  ? \"active-algo\"\r\n                  : \"\"\r\n                : \"\"\r\n            }`}\r\n            key={index}\r\n            onClick={() => changeAlgo(algo)}\r\n          >\r\n            {algo}\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Customize() {\r\n  const [customize, setCustomize] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <i\r\n        className=\"fas fa-chevron-circle-down fa-2x \"\r\n        onClick={() => setCustomize(!customize)}\r\n      ></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customize;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Customize from \"./Customize\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const { clearAll, refresh, startVisualisation, currentAlgo } =\r\n    useGlobalContext();\r\n\r\n  const [theme, setTheme] = useState(\r\n    localStorage.getItem(\"theme\") || \"light-theme\"\r\n  );\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const selectAlgoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.className = theme;\r\n  }, [theme]);\r\n\r\n  useEffect(() => {\r\n    setDropdown(false);\r\n  }, [currentAlgo]);\r\n\r\n  const toggleTheme = () => {\r\n    let newTheme = \"light-theme\";\r\n    if (theme === newTheme) {\r\n      newTheme = \"dark-theme\";\r\n    }\r\n    localStorage.setItem(\"theme\", newTheme);\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"themeToggle\">\r\n        <i className=\"fas fa-adjust fa-2x\" onClick={toggleTheme}></i>\r\n      </div>\r\n      <div className=\"title\">algo-visualiser </div>\r\n      {dropdown && (\r\n        <Dropdown\r\n          rect={selectAlgoRef.current.getBoundingClientRect()}\r\n          show={dropdown}\r\n        />\r\n      )}\r\n      <ul>\r\n        <li\r\n          onClick={() => setDropdown(!dropdown)}\r\n          ref={selectAlgoRef}\r\n          className={`selectAlgo ${currentAlgo !== \"\" ? \"active-algo\" : \"\"}`}\r\n        >\r\n          {currentAlgo || \"Select ALgo\"}\r\n          <i className=\"fas fa-caret-down fa-2x\"></i>\r\n        </li>\r\n        <i\r\n          className=\"options fas fa-play fa-2x\"\r\n          onClick={startVisualisation}\r\n        ></i>\r\n\r\n        <i className=\"options fas fa-redo fa-2x\" onClick={refresh}></i>\r\n        <i className=\"options fas fa-trash fa-2x\" onClick={clearAll}></i>\r\n      </ul>\r\n      <Customize />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/edge.css\";\r\n\r\nfunction Edge({ edge }) {\r\n  const { x1, x2, y1, y2, weight } = edge;\r\n  const { size, currentAlgo } = useGlobalContext();\r\n  if (x1 === -1) {\r\n    return <></>;\r\n  }\r\n  const angle = (Math.atan((y2 - y1) / (x2 - x1)) * 180) / Math.PI;\r\n  const dist = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n  const midX = (x1 + x2) / 2;\r\n  const midY = (y1 + y2) / 2;\r\n  const style = {\r\n    width: `${dist}px`,\r\n    top: `${midY + size / 2}px`,\r\n    left: `${midX - dist / 2 + size / 2}px`,\r\n    transform: `rotate(${angle}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"edge\" style={style}>\r\n      {currentAlgo === \"dijktras\" && weight}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edge;\r\n","import React from \"react\";\r\nimport Edge from \"./Edge\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nfunction DrawEdges() {\r\n  const { edges } = useGlobalContext();\r\n  return (\r\n    <div>\r\n      {edges.map((edge, index) => {\r\n        return <Edge key={index} edge={edge} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawEdges;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"../Styles/index.css\";\r\nimport DrawEdges from \"./DrawEdges\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/grid.css\";\r\nfunction Grid() {\r\n  const {\r\n    vertices,\r\n    makeNode,\r\n    currentVertex,\r\n    updatePoints,\r\n    nodesDist,\r\n    currentAlgo,\r\n  } = useGlobalContext();\r\n\r\n  const activeNode = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (activeNode.current !== null && currentVertex !== null) {\r\n      const myNode = activeNode.current.getBoundingClientRect();\r\n      updatePoints(myNode.x, myNode.y);\r\n    }\r\n  }, [currentVertex]);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {vertices.map((node, index) => {\r\n        const className = `${\r\n          node >= 1\r\n            ? node > 1 || nodesDist[index] !== 10000\r\n              ? \"visited\"\r\n              : \"vertex\"\r\n            : \"node\"\r\n        } ${currentVertex === index && \"active\"}`;\r\n        const style = {\r\n          transition: ` background 0s linear ${\r\n            node > 1 ? `${node - 1}s` : \"0s\"\r\n          }, color 0s`,\r\n        };\r\n        return (\r\n          <div\r\n            className={className}\r\n            style={style}\r\n            key={index}\r\n            onClick={() => makeNode(index)}\r\n            ref={currentVertex === index ? activeNode : null}\r\n          >\r\n            {currentAlgo === \"dijktras\" && nodesDist[index] !== 10000\r\n              ? nodesDist[index]\r\n              : \"\"}{\" \"}\r\n            {node > 1 ? node - 1 : \"\"}\r\n          </div>\r\n        );\r\n      })}\r\n      <DrawEdges />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Grid from \"./Grid\";\r\nimport \"../Styles/app.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <Navbar />\r\n      <Grid />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Styles/index.css\";\r\nimport App from \"./Components/App\";\r\nimport { AppProvider } from \"./Components/Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}