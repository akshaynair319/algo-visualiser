{"version":3,"sources":["utils/actions.js","utils/bfs.js","utils/dfs.js","utils/dijktras.js","utils/initialState.js","utils/reducer.js","Components/Context.js","Components/NavbarTools/Start.js","Components/NavbarTools/Undo.js","Components/NavbarTools/Clear.js","Components/NavbarTools/Delete.js","Components/NavbarTools/Lock.js","Components/NavbarTools/GetNavbarTools.js","Components/DropdownTools.js","Data/Algorithms.js","Components/DropdownAlgo.js","Components/SelectAlgo.js","Components/Navbar.js","Components/Edge.js","Components/DrawEdges.js","Components/Grid.js","Components/App.js","index.js"],"names":["ACTIONS","bfs","startNode","vertices","adjList","queue","newVertices","JSON","parse","stringify","iteration","length","len","j","index","shift","i","push","dfs","stack","pop","dijktras","nodesDist","pq","newNodesDist","dist","vertex","filter","node","getInitialState","cols","Math","floor","window","screen","width","rows","height","nodes","Array","join","split","map","parseFloat","size","currentVertex","lock","edge","node1","node2","weight","last_actions","currentAlgo","reducer","state","action","type","last_index","adjItem","actions","vertex_index","CurrentVertex","item","payload","idx","edgeWeight","random","Error","AppContext","React","createContext","initialState","AppProvider","children","useReducer","dispatch","refresh","Provider","value","undo","clearAll","toggleLock","makeNode","updatePoints","changeAlgo","algo","startVisualisation","useGlobalContext","useContext","Start","className","data-tooltip","onClick","Undo","Clear","Delete","Lock","GetNavbarTools","DropdownTools","useState","show","setShow","algorithms","DropdownAlgo","x","y","style","top","left","SelectAlgo","dropdown","setDropdown","setX","setY","setHeight","setWidth","selectAlgoRef","useRef","useEffect","getCoordinates","temp","current","getBoundingClientRect","addEventListener","removeEventListener","ref","Navbar","localStorage","getItem","theme","setTheme","innerWidth","windowSize","setWindowSize","alterWindowSize","document","documentElement","newTheme","setItem","Edge","a","getElementById","x1","offsetLeft","y1","offsetTop","b","x2","y2","angle","atan","PI","sqrt","midX","midY","transform","DrawEdges","setSize","changeSize","Grid","activeNode","myNode","r","querySelector","setProperty","transition","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db37cc96.chunk.js","sourcesContent":["export const ACTIONS = {\r\n  UNDO: \"UNDO\",\r\n  DELETE: \"DELETE\",\r\n  REFRESH: \"REFRESH\",\r\n  TOGGLE_LOCK: \"TOGGLE_LOCK\",\r\n  MAKENODE: \"MAKENODE\",\r\n  MAKEEDGE: \"MAKEEDGE\",\r\n  CHANGEALGO: \"CHANGEALGO\",\r\n  VISUALISE: \"VISUALISE\",\r\n};\r\n","export const bfs = (startNode, vertices, adjList) => {\r\n  let queue = [startNode];\r\n  let newVertices = JSON.parse(JSON.stringify(vertices));\r\n\r\n  let iteration = 2;\r\n  while (queue.length !== 0) {\r\n    const len = queue.length;\r\n    let j = 0;\r\n    while (j < len) {\r\n      const index = queue[0];\r\n      queue.shift();\r\n      if (newVertices[index] > 1) {\r\n        j++;\r\n        continue;\r\n      }\r\n      newVertices[index] = iteration;\r\n\r\n      for (let i = 0; i < adjList.length; i++) {\r\n        if (adjList[i][0] === index && newVertices[adjList[i][1]] === 1) {\r\n          queue.push(adjList[i][1]);\r\n        }\r\n        if (adjList[i][1] === index && newVertices[adjList[i][0]] === 1) {\r\n          queue.push(adjList[i][0]);\r\n        }\r\n      }\r\n      j++;\r\n    }\r\n    iteration++;\r\n  }\r\n\r\n  return newVertices;\r\n};\r\n","export const dfs = (startNode, vertices, adjList) => {\r\n  let stack = [startNode];\r\n  let newVertices = JSON.parse(JSON.stringify(vertices));\r\n\r\n  let iteration = 2;\r\n  while (stack.length !== 0) {\r\n    const index = stack[stack.length - 1];\r\n    stack.pop();\r\n    if (newVertices[index] > 1) {\r\n      continue;\r\n    }\r\n    newVertices[index] = iteration;\r\n\r\n    for (let i = 0; i < adjList.length; i++) {\r\n      if (adjList[i][0] === index && newVertices[adjList[i][1]] === 1) {\r\n        stack.push(adjList[i][1]);\r\n      }\r\n      if (adjList[i][1] === index && newVertices[adjList[i][0]] === 1) {\r\n        stack.push(adjList[i][0]);\r\n      }\r\n    }\r\n    iteration++;\r\n  }\r\n\r\n  return newVertices;\r\n};\r\n","export const dijktras = (startNode, nodesDist, adjList) => {\r\n  let pq = [[startNode, 0]];\r\n  let newNodesDist = JSON.parse(JSON.stringify(nodesDist));\r\n  newNodesDist[startNode] = 0;\r\n\r\n  while (pq.length !== 0) {\r\n    //go through the queue and find the element with the lowest dist from startNode\r\n    let dist = pq[0][1];\r\n    let index = 0;\r\n    for (let i = 1; i < pq.length; i++) {\r\n      if (pq[i][1] < dist) {\r\n        dist = pq[i][1];\r\n        index = i;\r\n      }\r\n    }\r\n    const vertex = pq[index][0];\r\n    pq = pq.filter((node) => node[0] !== vertex);\r\n\r\n    if (newNodesDist[vertex] < dist) continue; //check if there is already a better version of the element in queue\r\n    for (let i = 0; i < adjList.length; i++) {\r\n      if (\r\n        adjList[i][0] === vertex &&\r\n        newNodesDist[vertex] + adjList[i][2] < newNodesDist[adjList[i][1]]\r\n      ) {\r\n        newNodesDist[adjList[i][1]] = newNodesDist[vertex] + adjList[i][2];\r\n        pq.push([adjList[i][1], newNodesDist[vertex] + adjList[i][2]]);\r\n      }\r\n      if (\r\n        adjList[i][1] === vertex &&\r\n        newNodesDist[vertex] + adjList[i][2] < newNodesDist[adjList[i][0]]\r\n      ) {\r\n        newNodesDist[adjList[i][0]] = newNodesDist[vertex] + adjList[i][2];\r\n        pq.push([adjList[i][0], newNodesDist[vertex] + adjList[i][2]]);\r\n      }\r\n    }\r\n  }\r\n  return newNodesDist;\r\n};\r\n","export const getInitialState = () => {\r\n  const size = 32;\r\n  const cols = Math.floor(window.screen.width / size) - 1;\r\n  const rows = Math.floor(window.screen.height / size) - 4;\r\n  const number_of_nodes = rows * cols;\r\n  let nodes = new Array(number_of_nodes + 1)\r\n    .join(\"0\")\r\n    .split(\"\")\r\n    .map(parseFloat);\r\n\r\n  return {\r\n    size: size,\r\n    cols: cols,\r\n    rows: rows,\r\n    vertices: nodes,\r\n    currentVertex: null,\r\n    lock: false,\r\n    edge: {\r\n      //properties of the latest edge: from{x1,y1, node1} to{x2,y2,node2}\r\n      node1: -1,\r\n      node2: -1,\r\n      weight: -1,\r\n    },\r\n    adjList: [],\r\n    last_actions: [],\r\n    currentAlgo: \"\",\r\n    startNode: -1,\r\n    nodesDist: nodes.map((nodes) => 10000),\r\n  };\r\n};\r\n","import { ACTIONS } from \"./actions\";\r\nimport { bfs } from \"./bfs\";\r\nimport { dfs } from \"./dfs\";\r\nimport { dijktras } from \"./dijktras\";\r\nimport { getInitialState } from \"./initialState\";\r\nexport const reducer = (state, action) => {\r\n  if (action.type === ACTIONS.UNDO) {\r\n    if (state.lock) {\r\n      return state;\r\n    }\r\n    if (state.last_actions.length === 0) {\r\n      return state;\r\n    }\r\n    const last_index = state.last_actions.length - 1;\r\n    if (state.last_actions[last_index] === \"edge\") {\r\n      //last operation was an edge\r\n      return {\r\n        ...state,\r\n        adjList: state.adjList.filter(\r\n          (adjItem, index) => index !== state.adjList.length - 1\r\n        ),\r\n        last_actions: state.last_actions.filter(\r\n          (actions, index) => index !== last_index\r\n        ),\r\n      };\r\n    } else {\r\n      //last operation was an vertex\r\n      const vertex_index = state.last_actions[last_index];\r\n      return {\r\n        ...state,\r\n        vertices: state.vertices.map((vertex, index) => {\r\n          if (index === vertex_index) {\r\n            return 0;\r\n          }\r\n          return vertex;\r\n        }),\r\n        last_actions: state.last_actions.filter(\r\n          (actions, index) => index !== last_index\r\n        ),\r\n      };\r\n    }\r\n  }\r\n  if (action.type === ACTIONS.DELETE) {\r\n    return getInitialState();\r\n  }\r\n  if (action.type === ACTIONS.REFRESH) {\r\n    return {\r\n      ...state,\r\n      edge: {\r\n        node1: -1,\r\n        node2: -1,\r\n        weight: -1,\r\n      },\r\n      CurrentVertex: null,\r\n      currentAlgo: \"\",\r\n      vertices: state.vertices.map((item) => {\r\n        if (item >= 1) return 1;\r\n        return 0;\r\n      }),\r\n      nodesDist: state.vertices.map((node) => 10000),\r\n      lock: false,\r\n    };\r\n  }\r\n  if (action.type === ACTIONS.TOGGLE_LOCK) {\r\n    return { ...state, lock: !state.lock };\r\n  }\r\n  if (action.type === ACTIONS.MAKENODE) {\r\n    if (state.lock) {\r\n      return state;\r\n    }\r\n    const index = action.payload;\r\n    // console.log(index);\r\n    //if an algorithm is running ignore clicks\r\n    if (state.currentAlgo !== \"\") {\r\n      return state;\r\n    }\r\n    //check if user clicked on a vertex twice\r\n    if (index === state.edge.node1) {\r\n      //deactivate edge making process\r\n      return {\r\n        ...state,\r\n        currentVertex: null,\r\n        edge: { ...state.edge, node1: -1 },\r\n        startNode: index,\r\n      };\r\n    }\r\n    //set this node as the current node\r\n\r\n    //if this node was already an vertex\r\n    if (state.vertices[index] === 1) {\r\n      return { ...state, currentVertex: index };\r\n    }\r\n\r\n    //this is a new vertex added\r\n    return {\r\n      ...state,\r\n      currentVertex: null,\r\n      startNode: index,\r\n      edge: {\r\n        node1: -1,\r\n        node2: -1,\r\n        weight: -1,\r\n      },\r\n      vertices: state.vertices.map((vertex, idx) => {\r\n        if (index === idx) {\r\n          return 1;\r\n        }\r\n        return vertex;\r\n      }),\r\n      last_actions: [...state.last_actions, index],\r\n    };\r\n  }\r\n  if (action.type === ACTIONS.MAKEEDGE) {\r\n    //ignore if currently doing graph traversal\r\n    if (state.currentAlgo !== \"\") return state;\r\n    //maybe this vertex is part of an edge\r\n    if (state.edge.node1 !== -1) {\r\n      //found an edge\r\n      const edgeWeight = Math.floor(Math.random() * 10 + 1);\r\n      return {\r\n        ...state,\r\n        adjList: [\r\n          ...state.adjList,\r\n          [state.edge.node1, state.currentVertex, edgeWeight],\r\n        ],\r\n        edge: {\r\n          node1: -1,\r\n          node2: -1,\r\n          weight: -1,\r\n        },\r\n        currentVertex: null,\r\n        last_actions: [...state.last_actions, \"edge\"],\r\n      };\r\n    } else {\r\n      //maybe this is the first node of an edge\r\n      return {\r\n        ...state,\r\n        edge: {\r\n          ...state.edge,\r\n          node1: state.currentVertex,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  if (action.type === ACTIONS.CHANGEALGO) {\r\n    return { ...state, currentAlgo: action.payload, lock: true };\r\n  }\r\n  if (action.type === ACTIONS.VISUALISE) {\r\n    if (action.payload === \"bfs\") {\r\n      return {\r\n        ...state,\r\n        vertices: bfs(state.startNode, state.vertices, state.adjList),\r\n      };\r\n    }\r\n    if (action.payload === \"dfs\") {\r\n      return {\r\n        ...state,\r\n        vertices: dfs(state.startNode, state.vertices, state.adjList),\r\n      };\r\n    }\r\n    if (action.payload === \"dijktras\") {\r\n      return {\r\n        ...state,\r\n        nodesDist: dijktras(state.startNode, state.nodesDist, state.adjList),\r\n      };\r\n    }\r\n  }\r\n\r\n  throw new Error(\"invalid call\");\r\n};\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport { reducer } from \"../utils/reducer\";\r\nimport { ACTIONS } from \"../utils/actions\";\r\nimport { getInitialState } from \"../utils/initialState\";\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = getInitialState();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //function for undoing last action\r\n  const undo = () => {\r\n    dispatch({ type: ACTIONS.UNDO });\r\n  };\r\n  //function for clearing the board\r\n  const clearAll = () => {\r\n    dispatch({ type: ACTIONS.DELETE });\r\n  };\r\n\r\n  //function for clearing the progress of the algorithm\r\n  const refresh = () => {\r\n    dispatch({ type: ACTIONS.REFRESH });\r\n  };\r\n\r\n  //function for locking and unlocking the graph (saving user from unnecessary mistakes)\r\n  const toggleLock = () => {\r\n    dispatch({ type: ACTIONS.TOGGLE_LOCK });\r\n  };\r\n\r\n  const updatePoints = (width, height) => {\r\n    dispatch({ type: ACTIONS.MAKEEDGE, payload: { width, height } });\r\n  };\r\n\r\n  //handles the event when we click on a cell\r\n  const makeNode = (index) => {\r\n    dispatch({ type: ACTIONS.MAKENODE, payload: index });\r\n  };\r\n\r\n  //changes algorithm\r\n  const changeAlgo = (algo) => {\r\n    refresh();\r\n    dispatch({ type: ACTIONS.CHANGEALGO, payload: algo });\r\n  };\r\n\r\n  const startVisualisation = () => {\r\n    if (state.currentAlgo === \"\") return;\r\n    if (state.currentAlgo === \"bfs\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"bfs\" });\r\n    if (state.currentAlgo === \"dfs\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"dfs\" });\r\n    if (state.currentAlgo === \"dijktras\")\r\n      dispatch({ type: ACTIONS.VISUALISE, payload: \"dijktras\" });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        undo,\r\n        refresh,\r\n        clearAll,\r\n        toggleLock,\r\n        makeNode,\r\n        updatePoints,\r\n        changeAlgo,\r\n        startVisualisation,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(AppContext);\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./../Context\";\r\n\r\nfunction Start() {\r\n  const { startVisualisation } = useGlobalContext();\r\n  return (\r\n    <div className=\"tooltip-container start\" data-tooltip=\"start\">\r\n      <i className=\"options fas fa-play fa-2x\" onClick={startVisualisation}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./../Context\";\r\n\r\nfunction Undo() {\r\n  const { undo } = useGlobalContext();\r\n  return (\r\n    <div className=\"tooltip-container undo\" data-tooltip=\"undo\">\r\n      <i className=\"options fas fa-redo fa-2x\" onClick={undo}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Undo;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./../Context\";\r\n\r\nfunction Clear() {\r\n  const { refresh } = useGlobalContext();\r\n  return (\r\n    <div className=\"tooltip-container refresh\" data-tooltip=\"refresh\">\r\n      <i className=\"options fas fa-sync fa-2x\" onClick={refresh}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clear;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./../Context\";\r\n\r\nfunction Delete() {\r\n  const { clearAll } = useGlobalContext();\r\n  return (\r\n    <div className=\"tooltip-container delete\" data-tooltip=\"delete\">\r\n      <i className=\"options fas fa-trash fa-2x\" onClick={clearAll}></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./../Context\";\r\n\r\nfunction Lock() {\r\n  const { lock, toggleLock } = useGlobalContext();\r\n  return (\r\n    <div\r\n      className=\"tooltip-container lock-unlock\"\r\n      data-tooltip={`${lock ? \"lock\" : \"unlock\"}`}\r\n    >\r\n      <i\r\n        className={`options-lock fas fa-lock${lock ? \"\" : \"-open\"} fa-2x`}\r\n        onClick={toggleLock}\r\n      ></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lock;\r\n","import React from \"react\";\r\nimport Start from \"./Start\";\r\nimport Undo from \"./Undo\";\r\nimport Clear from \"./Clear\";\r\nimport Delete from \"./Delete\";\r\nimport Lock from \"./Lock\";\r\nimport \"./../../Styles/getNavbarTools.css\";\r\n\r\nfunction GetNavbarTools() {\r\n  return (\r\n    <div className=\"tools\">\r\n      {/* start algorithms */}\r\n      <Start />\r\n      {/* undo previous activity */}\r\n      <Undo />\r\n      {/* refresh the graph off all styles applied */}\r\n      <Clear />\r\n      {/* delete graph */}\r\n      <Delete />\r\n      {/* lock graph */}\r\n      <Lock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetNavbarTools;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./../Styles/dropdownTools.css\";\r\nimport GetNavbarTools from \"./NavbarTools/GetNavbarTools\";\r\n\r\nfunction DropdownTools() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div className=\"optionDropDown\">\r\n      <i\r\n        className=\"fas fa-chevron-circle-down fa-2x \"\r\n        onClick={() => setShow(!show)}\r\n      ></i>\r\n      {show && <GetNavbarTools />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownTools;\r\n","export const algorithms = [\r\n  \"bfs\",\r\n  \"dfs\",\r\n  \"dijktras\",\r\n  \"mst\",\r\n  \"cut-edge\",\r\n  \"cut-edge\",\r\n];\r\n","import React from \"react\";\r\nimport { algorithms } from \"../Data/Algorithms\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/dropdownalgo.css\";\r\nfunction DropdownAlgo({ x, y, height, width, show }) {\r\n  const { changeAlgo } = useGlobalContext();\r\n  // console.log(rect);\r\n  const style = {\r\n    top: `${y + height}px`,\r\n    left: `${x}px`,\r\n    width: `${width}px`,\r\n  };\r\n  return (\r\n    <div className={`dropdown ${show ? \"dropdown-show\" : \"\"}`} style={style}>\r\n      {algorithms.map((algo, index) => {\r\n        return (\r\n          <li key={index} onClick={() => changeAlgo(algo)}>\r\n            {algo}\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropdownAlgo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport DropdownAlgo from \"./DropdownAlgo\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"./../Styles/selectAlgo.css\";\r\nfunction SelectAlgo() {\r\n  const { currentAlgo } = useGlobalContext();\r\n  const [dropdown, setDropdown] = useState(false);\r\n  const [x, setX] = useState(-1);\r\n  const [y, setY] = useState(-1);\r\n  const [height, setHeight] = useState(-1);\r\n  const [width, setWidth] = useState(-1);\r\n\r\n  const selectAlgoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setDropdown(false);\r\n  }, [currentAlgo]);\r\n\r\n  const getCoordinates = () => {\r\n    const temp = selectAlgoRef.current;\r\n    if (temp) {\r\n      setX(temp.getBoundingClientRect().x);\r\n      setY(temp.getBoundingClientRect().y);\r\n      setHeight(temp.getBoundingClientRect().height);\r\n      setWidth(temp.getBoundingClientRect().width);\r\n    }\r\n  };\r\n\r\n  useEffect(getCoordinates, []);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", getCoordinates);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", getCoordinates);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"selectAlgo\"\r\n      ref={selectAlgoRef}\r\n      onClick={() => setDropdown(!dropdown)}\r\n    >\r\n      {/* dropdown menu for selecting algorithm */}\r\n      {dropdown && (\r\n        <DropdownAlgo\r\n          x={x}\r\n          y={y}\r\n          height={height}\r\n          width={width}\r\n          show={dropdown}\r\n        />\r\n      )}\r\n      {/* button for selecting algorithms */}\r\n      <li className=\"algo-btn\">\r\n        {currentAlgo || \"Select ALgo\"}\r\n        <i className=\"fas fa-caret-down fa-2x\"></i>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectAlgo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Styles/navbar.css\";\r\nimport DropdownTools from \"./DropdownTools\";\r\nimport GetNavbarTools from \"./NavbarTools/GetNavbarTools\";\r\nimport SelectAlgo from \"./SelectAlgo\";\r\nfunction Navbar() {\r\n  // handling light and dark themes through navbar\r\n  const [theme, setTheme] = useState(\r\n    localStorage.getItem(\"theme\") || \"light-theme\"\r\n  );\r\n\r\n  //checking for window size\r\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\r\n\r\n  const alterWindowSize = () => setWindowSize(window.innerWidth);\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", alterWindowSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", alterWindowSize);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.documentElement.className = theme;\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    let newTheme = \"light-theme\";\r\n    if (theme === newTheme) {\r\n      newTheme = \"dark-theme\";\r\n    }\r\n    localStorage.setItem(\"theme\", newTheme);\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      {/* to switch between light and dark themes */}\r\n      <div className=\"themeToggle\">\r\n        <i className=\"fas fa-adjust fa-2x\" onClick={toggleTheme}></i>\r\n      </div>\r\n      {/* title */}\r\n      <div className=\"title\">algo-visualiser </div>\r\n\r\n      {/* tools for graph */}\r\n      <ul className=\"navbar-items\">\r\n        <SelectAlgo />\r\n        {windowSize >= 950 && <GetNavbarTools />}\r\n      </ul>\r\n      {/* component for drop-down for small window */}\r\n      <DropdownTools />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/edge.css\";\r\n\r\nfunction Edge({ edge }) {\r\n  const node1 = edge[0];\r\n  const node2 = edge[1];\r\n  const weight = edge[2];\r\n  const a = document.getElementById(`#${node1}`);\r\n  const x1 = a.offsetLeft;\r\n  const y1 = a.offsetTop;\r\n  const b = document.getElementById(`#${node2}`);\r\n  const x2 = b.offsetLeft;\r\n  const y2 = b.offsetTop;\r\n\r\n  const { size, currentAlgo } = useGlobalContext();\r\n  if (x1 === -1) {\r\n    return <></>;\r\n  }\r\n  const angle = (Math.atan((y2 - y1) / (x2 - x1)) * 180) / Math.PI;\r\n  const dist = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n  const midX = (x1 + x2) / 2;\r\n  const midY = (y1 + y2) / 2;\r\n  const style = {\r\n    width: `${dist}px`,\r\n    top: `${midY + size / 2}px`,\r\n    left: `${midX - dist / 2 + size / 2}px`,\r\n    transform: `rotate(${angle}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"edge\" style={style}>\r\n      {currentAlgo === \"dijktras\" && weight}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edge;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Edge from \"./Edge\";\r\nimport { useGlobalContext } from \"./Context\";\r\n\r\nfunction DrawEdges() {\r\n  const { adjList } = useGlobalContext();\r\n  const [size, setSize] = useState(window.innerWidth);\r\n\r\n  const changeSize = () => {\r\n    setSize(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", changeSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", changeSize);\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      {adjList.map((edge, index) => {\r\n        return <Edge key={index} edge={edge} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawEdges;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"../Styles/index.css\";\r\nimport DrawEdges from \"./DrawEdges\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport \"../Styles/grid.css\";\r\nfunction Grid() {\r\n  const {\r\n    vertices,\r\n    makeNode,\r\n    currentVertex,\r\n    updatePoints,\r\n    nodesDist,\r\n    currentAlgo,\r\n    cols,\r\n    rows,\r\n  } = useGlobalContext();\r\n\r\n  const activeNode = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (activeNode.current !== null && currentVertex !== null) {\r\n      const myNode = activeNode.current.getBoundingClientRect();\r\n      updatePoints(myNode.x, myNode.y);\r\n    }\r\n  }, [currentVertex]);\r\n\r\n  useEffect(() => {\r\n    let r = document.querySelector(\":root\");\r\n    r.style.setProperty(\"--cols\", cols);\r\n    r.style.setProperty(\"--rows\", rows);\r\n  }, [cols, rows]);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {vertices.map((node, index) => {\r\n        const className = `${\r\n          node >= 1\r\n            ? node > 1 || nodesDist[index] !== 10000\r\n              ? \"visited\"\r\n              : \"vertex\"\r\n            : \"node\"\r\n        } ${currentVertex === index && \"active\"}`;\r\n        //transition style for node propagation animation\r\n        const style = {\r\n          transition: ` background 0s linear ${\r\n            node > 1 ? `${node - 1}s` : \"0s\"\r\n          }, color 0s`,\r\n        };\r\n        return (\r\n          <div\r\n            id={`#${index}`}\r\n            className={className}\r\n            style={style}\r\n            key={index}\r\n            onClick={() => makeNode(index)}\r\n            ref={currentVertex === index ? activeNode : null}\r\n          >\r\n            {currentAlgo === \"dijktras\" && nodesDist[index] !== 10000\r\n              ? nodesDist[index]\r\n              : \"\"}{\" \"}\r\n            {node > 1 ? node - 1 : \"\"}\r\n          </div>\r\n        );\r\n      })}\r\n      <DrawEdges />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Grid from \"./Grid\";\r\nimport \"../Styles/app.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <Navbar />\r\n      <Grid />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Styles/index.css\";\r\nimport App from \"./Components/App\";\r\nimport { AppProvider } from \"./Components/Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}